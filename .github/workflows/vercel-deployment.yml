name: Vercel Auto Setup and Deploy

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Check if project already exists on Vercel
        id: check-project
        run: |
          PROJECT_EXISTS=$(vercel --token ${{ secrets.VERCEL_TOKEN }} ls --json | grep -q "${{ github.event.repository.name }}" && echo "true" || echo "false")
          echo "project_exists=$PROJECT_EXISTS" >> $GITHUB_OUTPUT

      - name: First-time setup - Create vercel.json, Link and Deploy
        if: steps.check-project.outputs.project_exists == 'false'
        run: |
          # Sanitize the project name
          REPO_NAME="${{ github.event.repository.name }}"
          PROJECT_NAME=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]//g' | sed 's/---*/-/g')
          echo "Using sanitized project name: $PROJECT_NAME"

          # Create vercel.json
          echo "{
            \"name\": \"$PROJECT_NAME\",
            \"buildCommand\": \"npm run build\"
          }" > vercel.json

          # Link and deploy the project
          vercel --token ${{ secrets.VERCEL_TOKEN }} link --yes --project $PROJECT_NAME
          vercel --token ${{ secrets.VERCEL_TOKEN }} deploy --prod --yes
          echo "Initial project setup complete on Vercel."

      - name: Regular deployment - Let Vercel handle it
        if: steps.check-project.outputs.project_exists == 'true'
        run: |
          echo "Project already exists on Vercel."
          echo "Vercel's GitHub integration will handle this deployment automatically."
